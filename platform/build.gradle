apply plugin: 'com.android.library'
apply plugin: 'jacoco'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':base')
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'junit:junit:4.+'
    testCompile files('libs/simple-xml-2.7.1.jar')
    testCompile files('libs/jetty.jar')
    testCompile files('libs/commons.io_2.0.1.jar')
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
}

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"

    /* START test coverage */
    buildTypes {
        release { }
        debug {
            testCoverageEnabled true
        }
    }

    defaultConfig {
        testHandleProfiling true
        testFunctionalTest true
        multiDexEnabled true
    }

    packagingOptions {
        exclude 'plugin.properties'
        exclude 'lib/armeabi/libdatabase_sqlcipher.so'
        exclude 'lib/armeabi/libsqlcipher_android.so'
        exclude 'lib/armeabi/libstlport_shared.so'
        exclude 'META-INF/LICENSE.txt'
    }
    /* END test coverage */

    //For multi build purpose uncomment following block.
    // Please comment out following block before merge back to 'dev' branch.
    /*##############   #####################     ##########################     ###################*/

    publishNonDefault true

    /*##############   #####################     ##########################     ###################*/

    def prefix = "com.concur.mobile"

    defaultConfig{
        resValue "string", "sync_adapter_expense_authority", prefix+".platform.expense"
        resValue "string", "sync_adapter_config_authority", prefix+".platform.config"
        resValue "string", "sync_adapter_travel_authority", prefix+".platform.travel"
        resValue "string", "sync_adapter_acc_type", prefix+".platform.common.account"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    //For multi build purpose uncomment following block
    //Please comment out following block before merge back to 'dev' branch.
    /*##############   #####################     ##########################     ###################*/

    productFlavors {
        production{

        }

        newLoginTest{
            prefix = "com.concur.breeze.newlogin.test"
            resValue "string", "sync_adapter_expense_authority", prefix+".platform.expense"
            resValue "string", "sync_adapter_config_authority", prefix+".platform.config"
            resValue "string", "sync_adapter_travel_authority", prefix+".platform.travel"
            resValue "string", "sync_adapter_acc_type", prefix+".platform.common.account"
        }
    }

    /*##############   #####################     ##########################     ###################*/
}

/* START test coverage */
jacoco {
    toolVersion  = "0.7.2.+"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories = fileTree(dir: './build/intermediates/classes/production/debug')
    sourceDirectories = files('src/com/concur')
    executionData = files("$buildDir/jacoco/testDebug.exec")
}
/* END test coverage */