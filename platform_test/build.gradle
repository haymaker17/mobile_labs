
apply plugin: "java"

// extend the runtime
configurations {
    unitTestCompile.extendsFrom runtime
    unitTestRuntime.extendsFrom unitTestCompile
}

// add to repositories
repositories {
	mavenCentral()
}
 
// add to dependancies
dependencies {
	unitTestCompile "junit:junit:4.11"
	unitTestCompile files("../mobile_test_lib/lib/robolectric/android-all-4.4_r1-robolectric-0.jar")
	unitTestCompile files("../mobile_test_lib/lib/robolectric/robolectric-2.2-jar-with-dependencies.jar")
	unitTestCompile fileTree(dir: "lib", include: "*.jar")
	
	// Project dependencies	
	unitTestCompile fileTree(dir: "../appcompat/libs", include: "*.jar")
	unitTestCompile files("../base/bin/classes")
	unitTestCompile files("../base/bin/res")
	unitTestCompile files("../platform/bin/classes")
	unitTestCompile files("../platform/bin/res")
	unitTestCompile fileTree(dir: "../platform/libs/", include: "*.jar")
	unitTestCompile fileTree(dir: "../platform/libs/", include: "*.so")		

}
 
// add a new unitTest sourceSet
sourceSets {
    unitTest {
        java.srcDir file("test")
//        resources.srcDir file("src/test/resources")
    }
}

// build dependency projects
task buildDependencies << {
	println ">>> Building ConcurBase project..."
	"ant debug".execute(null, new File("../base"))
	
	println ">>> Building Platform project..."
	"ant debug".execute(null, new File("../platform"))	
}
// bind to compileJava to build dependencies before running tests
compileJava.dependsOn(buildDependencies)

test {
   	systemProperties['robolectric.logging'] = 'stdout'
   	systemProperties['use.mock.server'] = 'false'
   	systemProperties['server.address'] = 'https://rqa3-cb.concurtech.net'
   	systemProperties['pplogin.id'] = 'mswe@snwfull.com'
   	systemProperties['pplogin.pin.password'] = 'password1'

    testLogging {
        // log results to "build/test-results" directory
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
    }
    
}
 
// add the unitTest task
task unitTest(type:Test, dependsOn: assemble) {
    description = "run unit tests"
    testClassesDir = project.sourceSets.unitTest.output.classesDir
    classpath = project.sourceSets.unitTest.runtimeClasspath
}

// bind to check
check.dependsOn unitTest

